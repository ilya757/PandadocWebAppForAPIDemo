{"ast":null,"code":"module.exports = function (hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS = 'and false then defined module in return redo retry end for true self when ' + 'next until do begin unless nil break not case cond alias while ensure or ' + 'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{',\n    end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var SIGIL_DELIMITERS = '[/|([{<\"\\']';\n  var LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [{\n      endsParent: true,\n      contains: [{\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n        variants: [{\n          begin: /\"/,\n          end: /\"/\n        }, {\n          begin: /'/,\n          end: /'/\n        }, {\n          begin: /\\//,\n          end: /\\//\n        }, {\n          begin: /\\|/,\n          end: /\\|/\n        }, {\n          begin: /\\(/,\n          end: /\\)/\n        }, {\n          begin: /\\[/,\n          end: /\\]/\n        }, {\n          begin: /\\{/,\n          end: /\\}/\n        }, {\n          begin: /</,\n          end: />/\n        }]\n      }]\n    }]\n  };\n  var UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [{\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\\//,\n      end: /\\//\n    }, {\n      begin: /\\|/,\n      end: /\\|/\n    }, {\n      begin: /\\(/,\n      end: /\\)/\n    }, {\n      begin: /\\[/,\n      end: /\\]/\n    }, {\n      begin: /\\{/,\n      end: /\\}/\n    }, {\n      begin: /\\</,\n      end: /\\>/\n    }]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    }, {\n      begin: /'''/,\n      end: /'''/\n    }, {\n      begin: /~S\"\"\"/,\n      end: /\"\"\"/,\n      contains: []\n    }, {\n      begin: /~S\"/,\n      end: /\"/,\n      contains: []\n    }, {\n      begin: /~S'''/,\n      end: /'''/,\n      contains: []\n    }, {\n      begin: /~S'/,\n      end: /'/,\n      contains: []\n    }, {\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/,\n    // the mode is ended by the title\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: ELIXIR_IDENT_RE,\n      endsParent: true\n    })]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [STRING, UPCASE_SIGIL, LOWERCASE_SIGIL, hljs.HASH_COMMENT_MODE, CLASS, FUNCTION, {\n    begin: '::'\n  }, {\n    className: 'symbol',\n    begin: ':(?![\\\\s:])',\n    contains: [STRING, {\n      begin: ELIXIR_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ELIXIR_IDENT_RE + ':(?!:)',\n    relevance: 0\n  }, {\n    className: 'number',\n    begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n    relevance: 0\n  }, {\n    className: 'variable',\n    begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n  }, {\n    begin: '->'\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};","map":{"version":3,"names":["module","exports","hljs","ELIXIR_IDENT_RE","ELIXIR_METHOD_RE","ELIXIR_KEYWORDS","SUBST","className","begin","end","lexemes","keywords","SIGIL_DELIMITERS","LOWERCASE_SIGIL","contains","endsParent","BACKSLASH_ESCAPE","variants","UPCASE_SIGIL","STRING","FUNCTION","beginKeywords","inherit","TITLE_MODE","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","relevance","RE_STARTERS_RE","illegal"],"sources":["C:/Panda/Anthony's old app/node_modules/highlight.js/lib/languages/elixir.js"],"sourcesContent":["module.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n\n  var SIGIL_DELIMITERS = '[/|([{<\"\\']'\n  var LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent:true,\n        contains: [{\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            { begin: /\"/, end: /\"/ },\n            { begin: /'/, end: /'/ },\n            { begin: /\\//, end: /\\// },\n            { begin: /\\|/, end: /\\|/ },\n            { begin: /\\(/, end: /\\)/ },\n            { begin: /\\[/, end: /\\]/ },\n            { begin: /\\{/, end: /\\}/ },\n            { begin: /</, end: />/ }\n          ]\n        }]\n      },\n    ],\n  };\n\n  var UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      { begin: /\"/, end: /\"/ },\n      { begin: /'/, end: /'/ },\n      { begin: /\\//, end: /\\// },\n      { begin: /\\|/, end: /\\|/ },\n      { begin: /\\(/, end: /\\)/ },\n      { begin: /\\[/, end: /\\]/ },\n      { begin: /\\{/, end: /\\}/ },\n      { begin: /\\</, end: /\\>/ }\n    ]\n  };\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /\"\"\"/, end: /\"\"\"/,\n      },\n      {\n        begin: /'''/, end: /'''/,\n      },\n      {\n        begin: /~S\"\"\"/, end: /\"\"\"/,\n        contains: []\n      },\n      {\n        begin: /~S\"/, end: /\"/,\n        contains: []\n      },\n      {\n        begin: /~S'''/, end: /'''/,\n        contains: []\n      },\n      {\n        begin: /~S'/, end: /'/,\n        contains: []\n      },\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      },\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}