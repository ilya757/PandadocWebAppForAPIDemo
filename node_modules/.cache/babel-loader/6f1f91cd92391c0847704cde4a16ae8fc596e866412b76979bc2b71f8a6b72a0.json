{"ast":null,"code":"module.exports = function (hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/,\n    returnBegin: true,\n    contains: [{\n      className: 'built_in',\n      begin: /[\\w-]+/\n    }, {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n    }]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/,\n    end: ':',\n    excludeEnd: true,\n    starts: {\n      endsWithParent: true,\n      excludeEnd: true,\n      contains: [FUNCTION_LIKE, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n        className: 'number',\n        begin: '#[0-9A-Fa-f]+'\n      }, {\n        className: 'meta',\n        begin: '!important'\n      }]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var MEDIA_TYPES = \"all print screen speech\";\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [ATTRIBUTE]\n  };\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'selector-id',\n      begin: /#[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-class',\n      begin: /\\.[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$',\n      contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n    }, {\n      className: 'selector-pseudo',\n      begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n    },\n    // matching these here allows us to treat them more like regular CSS\n    // rules so everything between the {} gets regular rule highlighting,\n    // which is what we want for page and font-face\n    {\n      begin: '@(page|font-face)',\n      lexemes: AT_IDENTIFIER,\n      keywords: '@page @font-face'\n    }, {\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesn’t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      illegal: /:/,\n      // break on Less variables @var: ...\n      returnBegin: true,\n      contains: [{\n        className: 'keyword',\n        begin: AT_PROPERTY_RE\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        keywords: AT_MODIFIERS,\n        contains: [{\n          begin: /[a-z-]+:/,\n          className: \"attribute\"\n        }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'selector-tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      begin: '{',\n      end: '}',\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]\n    }]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","FUNCTION_LIKE","begin","returnBegin","contains","className","end","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","ATTRIBUTE","excludeEnd","starts","endsWithParent","C_BLOCK_COMMENT_MODE","AT_IDENTIFIER","AT_MODIFIERS","MEDIA_TYPES","AT_PROPERTY_RE","IDENT_RE","RULE","case_insensitive","illegal","lexemes","keywords","relevance"],"sources":["C:/Panda/Anthony's old app/node_modules/highlight.js/lib/languages/css.js"],"sourcesContent":["module.exports = function(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  }\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  }\n  var AT_IDENTIFIER = '@[a-z-]+' // @font-face\n  var AT_MODIFIERS = \"and or not only\"\n  var MEDIA_TYPES = \"all print screen speech\"\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/ // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}